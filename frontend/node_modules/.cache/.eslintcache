[{"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\index.js":"1","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\App.js":"2","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\reportWebVitals.js":"3","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Header.js":"4","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Footer.js":"5","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\HomeScreen.js":"6","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\products.js":"7","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\ProductComponent.js":"8","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\RatingComponent.js":"9","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\ProductScreen.js":"10","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\store.js":"11","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\apiSlice.js":"12","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\constants.js":"13","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\productsApiSlice.js":"14","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Loader.js":"15","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Message.js":"16","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\cartSlice.js":"17","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\utils\\cartUtils.js":"18","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\CartScreen.js":"19","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\authSlice.js":"20","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\LoginScreen.js":"21","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\usersApiSlice.js":"22","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\RegisterScreen.js":"23","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\ShippingScreen.js":"24","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\PrivateRoute.js":"25","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\CheckoutSteps.js":"26","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\PaymentMethod.js":"27","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\PlaceOrderScreen.js":"28","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\orderApiSlice.js":"29","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\OrderScreen.js":"30","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\ProfileScreen.js":"31","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\AdminRoute.js":"32","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\OrderListScreen.js":"33","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\ProductListScreen.js":"34","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\ProductEditScreen.js":"35","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\FormContainer.js":"36","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\UserListScreen.js":"37","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\UserEditScreen.js":"38","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Paginate.js":"39","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\SearchBox.js":"40","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\ProductCarousel.js":"41","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Meta.js":"42"},{"size":3535,"mtime":1701422835254,"results":"43","hashOfConfig":"44"},{"size":518,"mtime":1698402564914,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1695095640637,"results":"46","hashOfConfig":"44"},{"size":4270,"mtime":1701090533613,"results":"47","hashOfConfig":"44"},{"size":459,"mtime":1695108862705,"results":"48","hashOfConfig":"44"},{"size":2436,"mtime":1701405592103,"results":"49","hashOfConfig":"44"},{"size":2708,"mtime":1695111403074,"results":"50","hashOfConfig":"44"},{"size":1015,"mtime":1701085381836,"results":"51","hashOfConfig":"44"},{"size":1184,"mtime":1695116044743,"results":"52","hashOfConfig":"44"},{"size":8404,"mtime":1701423419782,"results":"53","hashOfConfig":"44"},{"size":621,"mtime":1698397596065,"results":"54","hashOfConfig":"44"},{"size":313,"mtime":1696409527994,"results":"55","hashOfConfig":"44"},{"size":351,"mtime":1700127235257,"results":"56","hashOfConfig":"44"},{"size":2242,"mtime":1701423512817,"results":"57","hashOfConfig":"44"},{"size":345,"mtime":1696416769485,"results":"58","hashOfConfig":"44"},{"size":270,"mtime":1696417343096,"results":"59","hashOfConfig":"44"},{"size":3818,"mtime":1699008623601,"results":"60","hashOfConfig":"44"},{"size":947,"mtime":1696934990198,"results":"61","hashOfConfig":"44"},{"size":4088,"mtime":1698394647302,"results":"62","hashOfConfig":"44"},{"size":1719,"mtime":1698656458483,"results":"63","hashOfConfig":"44"},{"size":4334,"mtime":1700043250314,"results":"64","hashOfConfig":"44"},{"size":2058,"mtime":1700655921731,"results":"65","hashOfConfig":"44"},{"size":4060,"mtime":1700043308824,"results":"66","hashOfConfig":"44"},{"size":3044,"mtime":1700043328197,"results":"67","hashOfConfig":"44"},{"size":597,"mtime":1698736854335,"results":"68","hashOfConfig":"44"},{"size":1401,"mtime":1698739303316,"results":"69","hashOfConfig":"44"},{"size":1949,"mtime":1700043271235,"results":"70","hashOfConfig":"44"},{"size":5485,"mtime":1700043288783,"results":"71","hashOfConfig":"44"},{"size":1622,"mtime":1699867362396,"results":"72","hashOfConfig":"44"},{"size":7929,"mtime":1699869490917,"results":"73","hashOfConfig":"44"},{"size":5766,"mtime":1699611007213,"results":"74","hashOfConfig":"44"},{"size":614,"mtime":1699861500427,"results":"75","hashOfConfig":"44"},{"size":3010,"mtime":1699865871503,"results":"76","hashOfConfig":"44"},{"size":3812,"mtime":1701077268883,"results":"77","hashOfConfig":"44"},{"size":6422,"mtime":1700131609113,"results":"78","hashOfConfig":"44"},{"size":366,"mtime":1700043177912,"results":"79","hashOfConfig":"44"},{"size":3025,"mtime":1700310766945,"results":"80","hashOfConfig":"44"},{"size":3075,"mtime":1700657315349,"results":"81","hashOfConfig":"44"},{"size":1090,"mtime":1701086273856,"results":"82","hashOfConfig":"44"},{"size":1217,"mtime":1701091507848,"results":"83","hashOfConfig":"44"},{"size":1174,"mtime":1701405777815,"results":"84","hashOfConfig":"44"},{"size":556,"mtime":1701423294658,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"qcw5wo",{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"93"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","suppressedMessages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195"},{"filePath":"196","messages":"197","suppressedMessages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","suppressedMessages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215"},{"filePath":"216","messages":"217","suppressedMessages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"219","messages":"220","suppressedMessages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\index.js",[],[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\App.js",[],[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\reportWebVitals.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Header.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Footer.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\HomeScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\products.js",[],[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\ProductComponent.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\RatingComponent.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\ProductScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\store.js",["222"],[],"import { configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport {apiSlice} from './slices/apiSlice';\r\nimport cartSliceReducer from './slices/cartSlice';\r\nimport authSliceReducer from './slices/authSlice';\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        [apiSlice.reducerPath] : apiSlice.reducer,\r\n        // cart is reducer state\r\n        cart : cartSliceReducer, \r\n        // auth is reducer state \r\n        auth: authSliceReducer,  \r\n    },\r\n\r\n    middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(apiSlice.middleware),\r\n    devTools: true,\r\n});\r\n\r\nexport default store","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\apiSlice.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\constants.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\productsApiSlice.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Loader.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Message.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\cartSlice.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\utils\\cartUtils.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\CartScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\authSlice.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\LoginScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\usersApiSlice.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\RegisterScreen.js",["223"],[],"import React,{useEffect, useState} from \"react\";\r\nimport {useNavigate, Link, useLocation} from 'react-router-dom';\r\nimport FormContainer from '../components/FormContainer';\r\nimport {Row, Col, Button, Form, FormGroup} from 'react-bootstrap';\r\nimport Loader from '../components/Loader';\r\nimport { useRegisterMutation } from \"../slices/usersApiSlice\";\r\nimport { setCredentials } from \"../slices/authSlice\";   \r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const[name, setName] = useState('')\r\n    const[email, setEmail] = useState('')\r\n    const[password, setPassword] = useState('')\r\n    const[confirmPassword, setConfirmPassword] = useState('')\r\n\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n\r\n    //destructing register mutation from usersApiSlice\r\n    const[register, {isLoading}] = useRegisterMutation();\r\n\r\n    //destructing userInfo from store.js(auth reducer)\r\n    const { userInfo } = useSelector((state) => state.auth)\r\n\r\n    const { search } = useLocation();\r\n\r\n    const sp = new URLSearchParams(search)\r\n\r\n    const redirect = sp.get('redirect') || '/'\r\n\r\n    useEffect(()=>{\r\n        if(userInfo){\r\n            navigate(redirect)\r\n        }\r\n    }, [userInfo, redirect, navigate])\r\n\r\n    const submitHanlder = async (e) => {\r\n       e.preventDefault()\r\n       if(password !== confirmPassword){\r\n        toast.error('Password does not match');\r\n        return\r\n       } else{\r\n            try{\r\n                const response = await register({name, email, password}). unwrap();\r\n                dispatch(setCredentials({...response}));\r\n                navigate(redirect)\r\n            } catch(error){\r\n                toast.error(error?.data?.message || error.error)\r\n            }\r\n       }    \r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <h1>Sing Up</h1>\r\n            <Form onSubmit = {submitHanlder}>\r\n                <FormGroup controlId=\"name\" className=\"my-3\">\r\n                    <Form.Label>Enter Name</Form.Label>\r\n                    <Form.Control type = 'text' placeholder ='enter name' value={name}\r\n                    onChange={(e) => setName(e.target.value)} \r\n                    />   \r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"email\" className=\"my-3\">\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control type = 'email' placeholder ='enter email' \r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} \r\n                    />   \r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"password\" className=\"my-3\">\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control type = 'password' placeholder ='enter password' \r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} \r\n                    />   \r\n                </FormGroup>\r\n\r\n                <FormGroup controlId=\"confirmPassword\" className=\"my-3\">\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control type = 'password' placeholder ='enter confirm password' \r\n                    value={confirmPassword}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)} \r\n                    />   \r\n                </FormGroup>\r\n\r\n                <Button type='submit' variant='primary' className='mt-2' \r\n                    disabled = {isLoading}>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n                {\r\n                    isLoading && <Loader />\r\n                }\r\n            <Row>\r\n                <Col>\r\n                    Already have an account ? {''}\r\n                    <Link to = {redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default RegisterScreen;\r\n","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\ShippingScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\PrivateRoute.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\CheckoutSteps.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\PaymentMethod.js",["224"],[],"import React,{useState, useEffect} from \"react\";\r\nimport { Form, Button, Col} from 'react-bootstrap';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from \"../slices/cartSlice\";\r\nimport { UseSelector, useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst PaymentMethod = () => {\r\n    const[paymentMethod, setPaymentMethod] = useState('payPal')\r\n\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const { shippingAddress} = useSelector((state) => state.cart)\r\n\r\n    useEffect(() => {\r\n        if(!shippingAddress){\r\n            navigate('/shipping')\r\n        }\r\n    }, [navigate, shippingAddress])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    return(\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <h1>Payment Method</h1> \r\n            <Form onSubmit = {submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check type = 'radio'\r\n                            className='my-2'\r\n                            name='paymentMethod'\r\n                            label = 'PayPal or credit Card'\r\n                            value='paymentMethod'\r\n                            id = 'paypal'\r\n                            checked\r\n                            onChange={(e)=>setPaymentMethod(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Continue</Button>\r\n            </Form>\r\n\r\n\r\n\r\n        </FormContainer>\r\n    )\r\n}\r\nexport default PaymentMethod","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\PlaceOrderScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\slices\\orderApiSlice.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\OrderScreen.js",["225","226"],[],"import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Card,\r\n  Button,\r\n  ListGroup,\r\n} from \"react-bootstrap\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport {\r\n  PayPalScriptProvider,\r\n  PayPalButtons,\r\n  usePayPalScriptReducer,\r\n} from \"@paypal/react-paypal-js\";\r\n// import { PayPalButtons, usePayPalScriptReducer } from \"@paypal/react-paypal-js\";\r\nimport Loader from \"../components/Loader\";\r\nimport Message from \"../components/Message\";\r\nimport {\r\n  useGetOrderDetailsQuery,\r\n  usePayOrderMutation,\r\n  useGetPayPalClientIdQuery,\r\n  useDeliverOrderMutation\r\n} from \"../slices/orderApiSlice\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst OrderScreen = () => {\r\n  const { id: orderId } = useParams();\r\n  console.log(\"orderId\", orderId);\r\n\r\n  //refetch() is used to refetch new data details, wen new data is added in db,\r\n  //data(order) - we get data from backend and orderSchema Model, data is rename as order\r\n\r\n  const {\r\n    data: order,\r\n    refetch,\r\n    isLoading,\r\n    error,\r\n  } = useGetOrderDetailsQuery(orderId);\r\n  console.log(\"order\", order);\r\n\r\n  const [payOrder, { isLoading: loadingPay }] = usePayOrderMutation();\r\n\r\n  const [deliverOrder, {isLoading: loadingDeliver}] = useDeliverOrderMutation();\r\n\r\n  const [{ isPending }, paypalDispatch] = usePayPalScriptReducer();\r\n\r\n  const {\r\n    data: paypal,\r\n    isLoading: loadingPayPal,\r\n    error: errorPayPal,\r\n  } = useGetPayPalClientIdQuery();\r\n\r\n  const { userInfo } = useSelector((state) => state.auth);\r\n\r\n  useEffect(() => {\r\n    if (!errorPayPal && !loadingPayPal && paypal.ClientId) {\r\n      const loadPayPalScript = async () => {\r\n        paypalDispatch({\r\n          type: \"resetOptions\",\r\n          value: {\r\n            \"client-id\": paypal.clientId,\r\n            currency: \"USD\",\r\n          },\r\n        });\r\n        paypalDispatch({ type: \"setLoadingStatus\", value: \"pending\" });\r\n      };\r\n      if (order && !order.isPaid) {\r\n        if (!window.paypal) {\r\n          loadPayPalScript();\r\n        }\r\n      }\r\n    }\r\n  }, [order, paypal, paypalDispatch, errorPayPal]);\r\n\r\n  async function onApproveTest(){\r\n    await payOrder({orderId, details: {payer : {} }})\r\n    refetch()\r\n    toast.success('Payment successful')\r\n  }\r\n\r\n  function onApprove(data, actions){\r\n    return actions.order.capture().then(async function(details){\r\n      try{\r\n        await payOrder({orderId, details});\r\n        refetch();\r\n        toast.success('Payment successful')\r\n      }catch(err){\r\n        toast.error(err?.data?.message || err.message)\r\n      }\r\n    })\r\n  }\r\n\r\n function createOrder(data, actions){\r\n    return actions.order.create({\r\n      purchase_units: [\r\n        {\r\n          amount: {\r\n            value: order.totalPrice,\r\n          }\r\n        }\r\n      ]\r\n    }).then((orderId) =>{\r\n      return orderId\r\n    })\r\n  }\r\n\r\n  function onError(err){\r\n    toast.error(err?.message)\r\n  }\r\n\r\n  const deliverOrderHandler = async () => {\r\n    try{\r\n      await deliverOrder(orderId)\r\n      refetch()\r\n      toast.success('Order delivered')\r\n    }catch(err){\r\n      toast.error(err?.data?.message || err.message)\r\n    }\r\n  }\r\n\r\n  return isLoading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\" />\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush rounded\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                {order.user.email}\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address} {order.shippingAddress.city}{\" \"}\r\n                {\"\"}\r\n                {order.shippingAddress.postalCode}{\" \"}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt} </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.map((item, index) => (\r\n                <ListGroup.Item key={index}>\r\n                  <Row>\r\n                    <Col md={2}>\r\n                      <Image src={item.image} alt={item.name} fluid rounded />\r\n                    </Col>\r\n                    <Col>\r\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                      {item.qty} x {item.price} = {item.qty * item.price}\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              ))}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items:</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>Shipping:</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                  <Col>Total Price:</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n\r\n                  {isPending ? (\r\n                    <Loader />\r\n                  ) : (\r\n                     <div>\r\n                    {/* //   <Button\r\n                    //     onClick={onApproveTest}\r\n                    //     style={{ marginBottom: \"10px\" }}\r\n                    //   >\r\n                    //     Test Pay Order  \r\n                    //   </Button> */}\r\n                      \r\n                      <div>\r\n                        <PayPalScriptProvider>\r\n                          <PayPalButtons\r\n                            createOrder={createOrder}\r\n                            onApprove={onApprove}\r\n                            onError={onError}\r\n                          ></PayPalButtons>\r\n                        </PayPalScriptProvider>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {/*   MARK AS DELIVERED PLACEORDER */}\r\n            \r\n              {loadingDeliver && <Loader />}\r\n              { userInfo && userInfo.isAdmin && order.isPaid &&\r\n              !order.isDelivered && (\r\n                <ListGroup.Item>\r\n                       <Button type='button' className='btn btn-block' onClick={deliverOrderHandler}>\r\n                  Mark as Delivered\r\n                </Button>\r\n                </ListGroup.Item>\r\n             \r\n              )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\ProfileScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\AdminRoute.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\OrderListScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\ProductListScreen.js",["227","228"],[],"import { LinkContainer } from \"react-router-bootstrap\";\r\nimport { Row, Col, Table, Button } from \"react-bootstrap\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { FaTimes, FaEdit, FaTrash } from \"react-icons/fa\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  useGetProductsQuery,\r\n  useCreateProductMutation,\r\n  useDeleteProductMutation,\r\n} from \"../../slices/productsApiSlice\";\r\nimport Message from \"../../components/Message\";\r\nimport Paginate from '../../components/Paginate';\r\nimport Loader from \"../../components/Loader\";\r\n\r\nconst ProductListScreen = () => {\r\n\r\n  const { pageNumber } = useParams();\r\n\r\n    //while we get pagination from backend, our data is not oly products\r\n    //wch includes page, pageszie\r\n  // const { data: products, isLoading, error, refetch } = useGetProductsQuery();\r\n  // console.log(\"products\", products);\r\n\r\n  const { data, isLoading, error, refetch } = useGetProductsQuery({pageNumber});\r\n\r\n  const [createProduct, { isLoading: loadingCreate }] =\r\n    useCreateProductMutation();\r\n\r\n  const [ deleteProduct, {isLoading: loadingDelete}] = useDeleteProductMutation();\r\n\r\n  const deleteHandler = async (id) => {\r\n    console.log(\"delete\", id);\r\n        if(window.confirm('Are you sure?')){\r\n            try{\r\n                await deleteProduct(id)\r\n                toast.success('Product deleted')\r\n                refetch()\r\n            }catch(err){\r\n                toast.error(err?.data?.message || err.error)\r\n            }\r\n        }\r\n  };\r\n\r\n  const createProductHandler = async () => {\r\n    if (window.confirm(\"Are you sure you want to create a new product?\")) {\r\n      try {\r\n        await createProduct();\r\n        refetch();\r\n      } catch (err) {\r\n        toast.error(err?.data?.message || err.error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className=\"text-align-center\">\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n\r\n        <Col className=\"text-end\">\r\n          <Button className=\"btn-sm m-3\" onClick={createProductHandler}>\r\n            <FaEdit />\r\n            Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {loadingCreate && <Loader />}\r\n\r\n      {isLoading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped hover responsive className=\"table-sm\">\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {data.products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button className=\"btn-sm mx-2\" variant=\"light\">\r\n                        <FaEdit />\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      className=\"btn-sm\"\r\n                      variant=\"danger\"\r\n                      onClick={() => deleteHandler(product._id)}\r\n                    >\r\n                      <FaTrash style={{ color: \"white\" }} />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages = {data.pages} page={data.page} isAdmin={true}/>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ProductListScreen;\r\n","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\ProductEditScreen.js",["229"],[],"import { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport {Form, Button} from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport Loader from '../../components/Loader';\r\nimport Message from '../../components/Message';\r\nimport FormContainer from '../../components/FormContainer'\r\nimport { useUpdateProductMutation, useGetProductDetailsQuery,\r\nuseUploadProductImageMutation } from '../../slices/productsApiSlice'\r\n\r\nconst ProductEditScreen = () => {\r\n\r\n    const { id: productId } = useParams()\r\n    console.log(\"productId\", productId)\r\n\r\n    const[name, setName] = useState('')\r\n    const[price, setPrice] = useState(0)\r\n    const[brand, setBrand] = useState('')\r\n    const[description, setDescription] = useState('')\r\n    const[countInStock, setCountInStock] = useState(0)\r\n    const[image, setImage] = useState('')\r\n    const[category, setCategory] = useState('')\r\n\r\n    const navigate = useNavigate() \r\n\r\n    const { data: product, isLoading, error } = useGetProductDetailsQuery(productId)\r\n    console.log(\"productssss\", product)\r\n\r\n    const [ updateProduct, { isLoading: loadingUpdate }] = useUpdateProductMutation()\r\n\r\n    const [ uploadProductImage, { isLoading: loadingUpload}] = useUploadProductImageMutation() \r\n\r\n    useEffect(()=>{\r\n        if(product){\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setDescription(product.description)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n        }\r\n    }, [product])\r\n\r\n    const submitHandler = async (e) => {\r\n        e.preventDefault()\r\n        console.log(\"call\")\r\n        const updatedProduct = {\r\n            productId,\r\n            name,\r\n            price,\r\n            image,\r\n            brand,\r\n            category,\r\n            countInStock,\r\n            description\r\n        }\r\n        console.log(\"updatedProduct\", updatedProduct)\r\n        const result = await updateProduct(updatedProduct)\r\n        console.log(\"result\", result)\r\n        if(result.error){\r\n            toast.error(result.error)\r\n        } else{\r\n            toast.success('Product updated')\r\n            navigate('/admin/productlist')\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        console.log(\"image\", e.target.files[0])\r\n        const formData = new FormData()\r\n        formData.append('image', e.target.files[0])\r\n       try{\r\n            const response = await uploadProductImage(formData).unwrap()\r\n            console.log(\"response\",response)\r\n            toast.success(response.message)\r\n            setImage(response.image) // updating image state\r\n       }catch(err){\r\n            toast.error(err?.data?.message || err.error)\r\n       }\r\n\r\n    }\r\n    return(\r\n        <>\r\n           <Link to='/admin/productlist' className='btn btn-light my-3'>Go Back</Link>\r\n           <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                { loadingUpdate && <Loader /> }\r\n\r\n                { isLoading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n                : ( \r\n                    <Form onSubmit={submitHandler}> \r\n                        <Form.Group controlId='name' className='my-2'>\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter name'\r\n                                value = {name} onChange={(e)=>setName(e.target.value)}   \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='price' className='my-2'>\r\n                            <Form.Label>Price</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter price'\r\n                                value = {price} onChange={(e)=>setPrice(e.target.value)}   \r\n                            />\r\n                        </Form.Group>\r\n\r\n                            {/* Image Input Placeholder */}\r\n\r\n                        <Form.Group controlId='image' className='my-2'>\r\n                            <Form.Label> Image</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter image url'\r\n                            value={image} onChange={(e)=>setImage}\r\n                            />\r\n\r\n                            <Form.Control type='file' label=\"choose file\" \r\n                            onChange ={uploadFileHandler}/>\r\n\r\n                        </Form.Group>\r\n\r\n                         <Form.Group controlId='brand' className='my-2'>\r\n                            <Form.Label>Brand</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter Brand'\r\n                                value = {brand} onChange={(e)=>setBrand(e.target.value)}   \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='category' className='my-2'>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter category'\r\n                                value = {category} onChange={(e)=>setCategory(e.target.value)}   \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='countInStock' className='my-2'>\r\n                            <Form.Label>Count In Stock</Form.Label>\r\n                            <Form.Control type='number' placeholder='Enter countInStock'\r\n                                value = {countInStock} onChange={(e)=>setCountInStock(e.target.value)}   \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='description' className='my-2'>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control type='text' placeholder='Enter description'\r\n                                value = {description} onChange={(e)=>setDescription(e.target.value)}   \r\n                            />\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary' className='my-2' >Update</Button>\r\n                    </Form>\r\n                )}\r\n           </FormContainer>\r\n        </>\r\n    )\r\n}\r\nexport default ProductEditScreen","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\FormContainer.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\UserListScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\screens\\Admin\\UserEditScreen.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Paginate.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\SearchBox.js",["230"],[],"import { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useParams, useNavigate, Navigate } from 'react-router-dom';\r\n\r\nconst SearchBox = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const { keyword: urlkeyword} = useParams()\r\n    const [keyword, setKeyword] = useState( urlkeyword || '')\r\n\r\n    const submitHandler = (e) =>{\r\n        e.preventDefault()\r\n        if(keyword.trim()){\r\n            setKeyword('')\r\n            navigate(`/search/${keyword}`)\r\n        } else{\r\n            navigate('/ ')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <Form onSubmit = { submitHandler} className='d-flex'>\r\n            <Form.Group controlId='search' className='my-2'>\r\n                <Form.Control type='text' placeholder='Search Products...'\r\n                    name = 'q' value = {keyword} \r\n                    onChange = {(e) => setKeyword(e.target.value)}\r\n                    className='mr-sm-2 ml-sm-5'\r\n                />\r\n            </Form.Group>\r\n            <Button type='submit' variant='outline-light' className='mx-2'\r\n            style={{ marginTop:\"10px\", height:'3rem'}}>\r\n                Search</Button>\r\n        </Form>\r\n    )\r\n\r\n}\r\n\r\nexport default SearchBox;","E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\ProductCarousel.js",[],[],"E:\\Pavithra React Folder\\New_Proshop-v2\\frontend\\src\\components\\Meta.js",[],[],{"ruleId":"231","severity":1,"message":"232","line":1,"column":26,"nodeType":"233","messageId":"234","endLine":1,"endColumn":46},{"ruleId":"235","severity":1,"message":"236","line":46,"column":40,"nodeType":"237","messageId":"238","endLine":46,"endColumn":81,"fix":"239"},{"ruleId":"231","severity":1,"message":"240","line":6,"column":10,"nodeType":"233","messageId":"234","endLine":6,"endColumn":21},{"ruleId":"241","severity":1,"message":"242","line":75,"column":6,"nodeType":"243","endLine":75,"endColumn":50,"suggestions":"244"},{"ruleId":"231","severity":1,"message":"245","line":77,"column":18,"nodeType":"233","messageId":"234","endLine":77,"endColumn":31},{"ruleId":"231","severity":1,"message":"246","line":4,"column":10,"nodeType":"233","messageId":"234","endLine":4,"endColumn":17},{"ruleId":"231","severity":1,"message":"247","line":29,"column":38,"nodeType":"233","messageId":"234","endLine":29,"endColumn":51},{"ruleId":"231","severity":1,"message":"248","line":31,"column":46,"nodeType":"233","messageId":"234","endLine":31,"endColumn":59},{"ruleId":"231","severity":1,"message":"249","line":3,"column":34,"nodeType":"233","messageId":"234","endLine":3,"endColumn":42},"no-unused-vars","'getDefaultMiddleware' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property unwrap.","MemberExpression","unexpectedWhitespace",{"range":"250","text":"251"},"'UseSelector' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadingPayPal'. Either include it or remove the dependency array.","ArrayExpression",["252"],"'onApproveTest' is defined but never used.","'FaTimes' is defined but never used.","'loadingDelete' is assigned a value but never used.","'loadingUpload' is assigned a value but never used.","'Navigate' is defined but never used.",[1600,1602],".",{"desc":"253","fix":"254"},"Update the dependencies array to be: [order, paypal, paypalDispatch, errorPayPal, loadingPayPal]",{"range":"255","text":"256"},[2088,2132],"[order, paypal, paypalDispatch, errorPayPal, loadingPayPal]"]